
    async function detect_frequency() {
      console.log("ðŸŽ¤ Listening for frequency...");

      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
      const audioContext = new (window.AudioContext || window.webkitAudioContext)();
      console.log("Sample rate used:", audioContext.sampleRate);

      const source = audioContext.createMediaStreamSource(stream);
      const analyser = audioContext.createAnalyser();
      analyser.fftSize = 2048;
      const bufferLength = analyser.frequencyBinCount;
      const dataArray = new Float32Array(bufferLength);

      source.connect(analyser);

      return new Promise(resolve => {
        setTimeout(() => {
          analyser.getFloatFrequencyData(dataArray);

          let maxIndex = 0;
          for (let i = 1; i < bufferLength; i++) {
            if (dataArray[i] > dataArray[maxIndex]) {
              maxIndex = i;
            }
          }

          const nyquist = audioContext.sampleRate / 2;
          const peak_freq = maxIndex * nyquist / bufferLength;
          resolve(peak_freq);
        }, duration * 1000);
      });
    }